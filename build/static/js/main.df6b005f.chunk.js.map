{"version":3,"sources":["CardDisp.js","Distributer.js","App.js","reportWebVitals.js","index.js"],"names":["CardDisp","option","price","user","storage","publicprojects","access","privateprojects","support","subdomain","statusreport","style1","id","color","style2","Card","sx","maxWidth","CardContent","Typography","fontSize","gutterBottom","variant","component","className","style","CardActions","Button","Distributer","cardContent","map","cont","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df6b005f.chunk.js","sourcesContent":["import Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nexport function CardDisp({\n  option,\n  price,\n  user,\n  storage,\n  publicprojects,\n  access,\n  privateprojects,\n  support,\n  subdomain,\n  statusreport,\n  id,\n}) {\n  const style1 = { color: option == \"FREE\" ? \"lightgrey\" : \"black\" };\n  const style2 = {\n    color: option == \"FREE\" || option == \"PLUS\" ? \"lightgrey\" : \"black\",\n  };\n  return (\n    <Card id=\"card\" sx={{ maxWidth: 300 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {option}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {price} <span id=\"subtxt\">/month</span>\n        </Typography>\n        <hr></hr>\n        <div className=\"details\">\n          <Typography className=\"typo\">\n            <CheckIcon />\n            {user}\n          </Typography>\n          <Typography className=\"typo\">\n            <CheckIcon />\n            {storage}\n          </Typography>\n          <Typography className=\"typo\">\n            <CheckIcon />\n            {publicprojects}\n          </Typography>\n          <Typography className=\"typo\">\n            <CheckIcon />\n            {access}\n          </Typography>\n          <Typography className=\"typo\" style={style1}>\n            {option == \"FREE\" ? <ClearIcon /> : <CheckIcon />}\n            {privateprojects}\n          </Typography>\n          <Typography className=\"typo\" style={style1}>\n            {option == \"FREE\" ? <ClearIcon /> : <CheckIcon />}\n            {support}\n          </Typography>\n          <Typography className=\"typo\" style={style1}>\n            {option == \"FREE\" ? <ClearIcon /> : <CheckIcon />}\n            {subdomain}\n          </Typography>\n          <Typography className=\"typo\" style={style2}>\n            {option == \"FREE\" || option == \"PLUS\" ? (\n              <ClearIcon />\n            ) : (\n              <CheckIcon />\n            )}\n            {statusreport}\n          </Typography>\n        </div>\n      </CardContent>\n      <CardActions className=\"cardaction\">\n        <Button id=\"btn\" variant=\"contained\">\n          Button\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { CardDisp } from \"./CardDisp\";\n\nexport function Distributer({ cardContent }) {\n  return (\n    <div className=\"content\">\n      {cardContent.map((cont, index) => {\n        return (\n          <CardDisp\n            option={cont.option}\n            price={cont.price}\n            user={cont.user}\n            storage={cont.storage}\n            publicprojects={cont.publicprojects}\n            access={cont.access}\n            privateprojects={cont.privateprojects}\n            support={cont.support}\n            subdomain={cont.subdomain}\n            statusreport={cont.statusreport}\n            id={cont.index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { Distributer } from \"./Distributer\";\n\nfunction App() {\n  const cardContent = [\n    {\n      option: \"FREE\",\n      price: \"$0\",\n      user: \"Single User\",\n      storage: \"5GB Storage\",\n      publicprojects: \"Unlimited Public Projects\",\n      access: \"Community Access\",\n      privateprojects: \"Unlimited Private Projects\",\n      support: \"Dedicated Phone Support\",\n      subdomain: \"Free Subdomain\",\n      statusreport: \"Monthly Status Report\",\n    },\n    {\n      option: \"PLUS\",\n      price: \"$9\",\n      user: \"5 Users\",\n      storage: \"50GB Storage\",\n      publicprojects: \"Unlimited Public Projects\",\n      access: \"Community Access\",\n      privateprojects: \"Unlimited Private Projects\",\n      support: \"Dedicated Phone Support\",\n      subdomain: \"Free Subdomain\",\n      statusreport: \"Monthly Status Report\",\n    },\n    {\n      option: \"PRO\",\n      price: \"$49\",\n      user: \"Unlimited Users\",\n      storage: \"150GB Storage\",\n      publicprojects: \"Unlimited Public Projects\",\n      access: \"Community Access\",\n      privateprojects: \"Unlimited Private Projects\",\n      support: \"Dedicated Phone Support\",\n      subdomain: \"Unlimited Free Subdomain\",\n      statusreport: \"Monthly Status Report\",\n    },\n  ];\n  return (\n    <div className=\"App\">\n      <Distributer cardContent={cardContent} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}